{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MusaddiqAhmed\\\\Desktop\\\\khata-frontend-master\\\\src\\\\Components\\\\Auth\\\\Registration.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@mui/material';\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport { provider } from '../../Context/ContextPovider';\nimport SimpleDialog from '../Modal';\nimport { SuccessPopupContent } from '../SuccessPopupContent';\nimport LoginContent from './LoginContent';\nimport './Registration.css';\nimport RegistrationContent from './RegistrationContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [content, setContent] = useState('');\n  const {\n    loginPopup,\n    setAdminPannel,\n    setIsLoading,\n    setError\n  } = useContext(provider);\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const successPopup = () => {\n    setContent( /*#__PURE__*/_jsxDEV(SuccessPopupContent, {\n      handleLoginModal: handleLoginModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this));\n  };\n\n  const handleAddUser = payload => {\n    const {\n      name,\n      age,\n      email,\n      password,\n      profile\n    } = payload;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('age', age);\n    formData.append('email', email);\n    formData.append('password', password);\n    formData.append('profile', profile);\n    setError({\n      message: '',\n      open: false\n    });\n    setIsLoading(true);\n    const url = `https://server-khata.herokuapp.com/register/`;\n    axios.post(url, formData).then(res => {\n      setIsLoading(false);\n\n      if (res.data.token) {\n        console.log(res.data);\n        successPopup();\n      } else setError({\n        message: 'User has been already registered!',\n        open: true\n      });\n    }).catch(e => setError({\n      message: 'Something went wrong please try again later!',\n      open: true\n    })).finally(() => setIsLoading(false));\n  };\n\n  const handleRegistrationModal = () => {\n    setError({\n      message: '',\n      open: false\n    });\n    setIsOpen(true);\n    setContent( /*#__PURE__*/_jsxDEV(RegistrationContent, {\n      handleClose: handleClose,\n      handleAddUser: handleAddUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this));\n  };\n\n  const handleLogin = payload => {\n    setError({\n      message: '',\n      open: false\n    });\n    setIsLoading(true);\n    const url = `https://server-khata.herokuapp.com/login/`;\n    axios.post(url, { ...payload\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.data.token) {\n        setAdminPannel(res.data);\n        handleClose();\n      } else setError({\n        message: 'Wrong credentials!',\n        open: true\n      });\n    }).catch(e => setError({\n      message: 'Wrong credentials!',\n      open: true\n    })).finally(() => setIsLoading(false));\n  };\n\n  const handleLoginModal = () => {\n    setError({\n      message: '',\n      open: false\n    });\n    setIsOpen(true);\n    setContent( /*#__PURE__*/_jsxDEV(LoginContent, {\n      handleClose: handleClose,\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this));\n  };\n\n  React.useEffect(() => {\n    if (loginPopup) {\n      handleLoginModal();\n    }\n  }, [loginPopup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unused\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tired of managing your daily expenses?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Here's the solution. So let's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleRegistrationModal(),\n        sx: {\n          padding: '10px 25px'\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", ' ', /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleLoginModal(),\n          sx: {\n            color: '#2bc3ff'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      isOpen: isOpen,\n      handleClose: handleClose,\n      content: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Registration, \"pjDAXWhcMrzoQ6fCO1oEBFfsJfA=\");\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/Users/MusaddiqAhmed/Desktop/khata-frontend-master/src/Components/Auth/Registration.jsx"],"names":["Button","axios","React","useContext","useState","provider","SimpleDialog","SuccessPopupContent","LoginContent","RegistrationContent","Registration","isOpen","setIsOpen","content","setContent","loginPopup","setAdminPannel","setIsLoading","setError","handleClose","successPopup","handleLoginModal","handleAddUser","payload","name","age","email","password","profile","formData","FormData","append","message","open","url","post","then","res","data","token","console","log","catch","e","finally","handleRegistrationModal","handleLogin","useEffect","padding","color"],"mappings":"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","sourcesContent":["import { Button } from '@mui/material';\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport { provider } from '../../Context/ContextPovider';\nimport SimpleDialog from '../Modal';\nimport { SuccessPopupContent } from '../SuccessPopupContent';\nimport LoginContent from './LoginContent';\nimport './Registration.css';\nimport RegistrationContent from './RegistrationContent';\n\nconst Registration = () => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [content, setContent] = useState('');\n\tconst { loginPopup, setAdminPannel, setIsLoading, setError } =\n\t\tuseContext(provider);\n\n\tconst handleClose = () => {\n\t\tsetIsOpen(false);\n\t};\n\n\tconst successPopup = () => {\n\t\tsetContent(\n\t\t\t<SuccessPopupContent handleLoginModal={handleLoginModal} />,\n\t\t);\n\t};\n\tconst handleAddUser = (payload) => {\n\t\tconst { name, age, email, password, profile } = payload;\n\t\tconst formData = new FormData();\n\t\tformData.append('name', name);\n\t\tformData.append('age', age);\n\t\tformData.append('email', email);\n\t\tformData.append('password', password);\n\t\tformData.append('profile', profile);\n\t\tsetError({ message: '', open: false });\n\t\tsetIsLoading(true);\n\t\tconst url = `https://server-khata.herokuapp.com/register/`;\n\t\taxios\n\t\t\t.post(url, formData)\n\t\t\t.then((res) => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tif (res.data.token) {\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\tsuccessPopup();\n\t\t\t\t} else\n\t\t\t\t\tsetError({\n\t\t\t\t\t\tmessage: 'User has been already registered!',\n\t\t\t\t\t\topen: true,\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((e) =>\n\t\t\t\tsetError({\n\t\t\t\t\tmessage: 'Something went wrong please try again later!',\n\t\t\t\t\topen: true,\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.finally(() => setIsLoading(false));\n\t};\n\tconst handleRegistrationModal = () => {\n\t\tsetError({ message: '', open: false });\n\t\tsetIsOpen(true);\n\t\tsetContent(\n\t\t\t<RegistrationContent\n\t\t\t\thandleClose={handleClose}\n\t\t\t\thandleAddUser={handleAddUser}\n\t\t\t/>,\n\t\t);\n\t};\n\n\tconst handleLogin = (payload) => {\n\t\tsetError({ message: '', open: false });\n\t\tsetIsLoading(true);\n\t\tconst url = `https://server-khata.herokuapp.com/login/`;\n\t\taxios\n\t\t\t.post(url, { ...payload })\n\t\t\t.then((res) => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tif (res.data.token) {\n\t\t\t\t\tsetAdminPannel(res.data);\n\t\t\t\t\thandleClose();\n\t\t\t\t} else\n\t\t\t\t\tsetError({ message: 'Wrong credentials!', open: true });\n\t\t\t})\n\t\t\t.catch((e) =>\n\t\t\t\tsetError({ message: 'Wrong credentials!', open: true }),\n\t\t\t)\n\t\t\t.finally(() => setIsLoading(false));\n\t};\n\tconst handleLoginModal = () => {\n\t\tsetError({ message: '', open: false });\n\t\tsetIsOpen(true);\n\t\tsetContent(\n\t\t\t<LoginContent\n\t\t\t\thandleClose={handleClose}\n\t\t\t\thandleLogin={handleLogin}\n\t\t\t/>,\n\t\t);\n\t};\n\tReact.useEffect(() => {\n\t\tif (loginPopup) {\n\t\t\thandleLoginModal();\n\t\t}\n\t}, [loginPopup]);\n\treturn (\n\t\t<div className='messages'>\n\t\t\t<div>\n\t\t\t\t<div className='unused'></div>\n\t\t\t\t<h1>Tired of managing your daily expenses?</h1>\n\t\t\t\t<h3>Here's the solution. So let's</h3>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => handleRegistrationModal()}\n\t\t\t\t\tsx={{ padding: '10px 25px' }}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t>\n\t\t\t\t\tGet Started\n\t\t\t\t</Button>\n\t\t\t\t<p>\n\t\t\t\t\tAlready registered?{' '}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => handleLoginModal()}\n\t\t\t\t\t\tsx={{ color: '#2bc3ff' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<SimpleDialog\n\t\t\t\tisOpen={isOpen}\n\t\t\t\thandleClose={handleClose}\n\t\t\t\tcontent={content}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}