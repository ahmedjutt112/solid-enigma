{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MusaddiqAhmed\\\\Desktop\\\\khata-frontend-master\\\\src\\\\Components\\\\Dashboard\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport './Dashboard.css';\nimport axios from 'axios';\nimport CollapsibleTable from '../Table/Table';\nimport { provider } from '../../Context/ContextPovider';\nimport { Snackbar } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport speak from '../../utils/spetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n});\n_c2 = Alert;\n\nconst Dashboard = () => {\n  _s();\n\n  const [users, setUsers] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    state,\n    message,\n    adminPannel\n  } = useContext(provider);\n  const [open, setOpen] = React.useState(false);\n  React.useEffect(() => {\n    speak(`Welcome back, ${adminPannel.admin.name.split(' ')[0]}`);\n  }, []);\n\n  const getUsers = id => {\n    setIsLoading(true);\n    let url;\n    if (id) url = `https://server-khata.herokuapp.com/users/${id}`;else url = `https://server-khata.herokuapp.com/users/`;\n    const headers = {\n      headers: {\n        Authorization: 'Bearer ' + adminPannel.token\n      }\n    };\n    axios.get(url, headers).then(res => setUsers([...res.data])).catch(e => console.log(e)).finally(() => setIsLoading(false));\n  };\n\n  React.useEffect(() => {\n    getUsers();\n  }, [state]);\n  React.useEffect(() => {\n    message !== '' && setOpen(true);\n  }, [message]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unused\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CollapsibleTable, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unused\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: [message, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"MiIdL8npMoI+iz9bwyhFyKxis/0=\");\n\n_c3 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/MusaddiqAhmed/Desktop/khata-frontend-master/src/Components/Dashboard/Dashboard.jsx"],"names":["React","useContext","axios","CollapsibleTable","provider","Snackbar","MuiAlert","speak","Alert","forwardRef","props","ref","Dashboard","users","setUsers","useState","isLoading","setIsLoading","state","message","adminPannel","open","setOpen","useEffect","admin","name","split","getUsers","id","url","headers","Authorization","token","get","then","res","data","catch","e","console","log","finally","handleClose","event","reason","width"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport './Dashboard.css';\nimport axios from 'axios';\nimport CollapsibleTable from '../Table/Table';\nimport { provider } from '../../Context/ContextPovider';\nimport { Snackbar } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport speak from '../../utils/spetch';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n\treturn (\n\t\t<MuiAlert elevation={6} ref={ref} variant='filled' {...props} />\n\t);\n});\n\nconst Dashboard = () => {\n\tconst [users, setUsers] = React.useState([]);\n\n\tconst [isLoading, setIsLoading] = React.useState(false);\n\tconst { state, message, adminPannel } = useContext(provider);\n\tconst [open, setOpen] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tspeak(`Welcome back, ${adminPannel.admin.name.split(' ')[0]}`);\n\t}, []);\n\n\tconst getUsers = (id) => {\n\t\tsetIsLoading(true);\n\n\t\tlet url;\n\t\tif (id) url = `https://server-khata.herokuapp.com/users/${id}`;\n\t\telse url = `https://server-khata.herokuapp.com/users/`;\n\t\tconst headers = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + adminPannel.token,\n\t\t\t},\n\t\t};\n\t\taxios\n\t\t\t.get(url, headers)\n\t\t\t.then((res) => setUsers([...res.data]))\n\t\t\t.catch((e) => console.log(e))\n\t\t\t.finally(() => setIsLoading(false));\n\t};\n\n\tReact.useEffect(() => {\n\t\tgetUsers();\n\t}, [state]);\n\n\tReact.useEffect(() => {\n\t\tmessage !== '' && setOpen(true);\n\t}, [message]);\n\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='unused'></div>\n\t\t\t<CollapsibleTable users={users} />\n\t\t\t<div className='unused'></div>\n\t\t\t<Snackbar\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<Alert\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tseverity='success'\n\t\t\t\t\tsx={{ width: '100%' }}\n\t\t\t\t>\n\t\t\t\t\t{message}!\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}